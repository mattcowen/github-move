{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM Name"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the AD VMs Created"
      },
      "defaultValue": "Standard_DS3_v2"
    },
    "windowsImagePublisher": {
      "type": "string",
      "metadata": {
        "description": "The Publisher of Windows Image"
      },
      "defaultValue": "MicrosoftWindowsServer"
    },
    "windowsImageOffer": {
      "type": "string",
      "metadata": {
        "description": "The offer of Windows Image"
      },
      "defaultValue": "WindowsServer"
    },
    "windowsImageSKU": {
      "type": "string",
      "metadata": {
        "description": "The SKU Name of Windows Image"
      },
      "defaultValue": "2016-Datacenter"
    },
    "windowsImageVersion": {
      "type": "string",
      "metadata": {
        "description": "The Version of Windows Image"
      },
      "defaultValue": "latest"
    },
    "diskSize": {
      "type": "int",
      "metadata": {
        "description": "The Size of SQL VM data disk. Default 2 GB"
      },
      "defaultValue": 2
    },
    "storageAccount": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account Name"
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The domain name"
      }
    },
    "subnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "the resource id to the subnet"
      }
    },
    "nicName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Nic attached to the VM"
      }
    },
    "primaryAdIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The address of Primary AD"
      },
      "defaultValue": "10.0.0.4"
    },
    "sharepointPublicIpName": {
      "type": "string",
      "metadata": {
        "description": "The name for the public IP"
      },
      "defaultValue": "sharepointPublicIp"
    },
    "sharepointPublicIpDnsName": {
      "type": "string",
      "metadata": {
        "description": "The name for the public IP"
      }
    },
    "installationISOUri": {
      "type": "string",
      "metadata": {
        "description": "The Uri to the installation ISO e.g. https://foo.example.com/bar.iso"
      },
      "defaultValue": ""
    },
    "sharePointSetupUserAccountUserName": {
      "type": "string"
    },
    "sharePointFarmAccountUserName": {
      "type": "string"
    },
    "sharePointSetupUserAccountPassword": {
      "type": "securestring"
    },
    "sharePointFarmAccountPassword": {
      "type": "securestring"
    },
    "sharePointFarmPassphrasePassword": {
      "type": "securestring"
    },
    "DatabaseName": {
      "type": "string"
    },
    "sqlVMName": {
      "type": "string"
    },
    "fqdn": {
      "type": "string"
    },
    "sharepointInstallSourceDrive": {
      "type": "string"
    },
    "sharepointInstallSourceFolder": {
      "type": "string"
    },
    "ProductKey": {
      "type": "string"
    },
    "availabilitySet": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set that the AD VM is created in"
      },
      "defaultValue": "appsSet"
    },
    "sharePointIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address to assign to the server"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmContainerName": "vhds3",
    "deployModulesURL": "[concat(parameters('_artifactsLocation'),'/DSC/PrepareSharepoint.zip',parameters('_artifactsLocationSasToken'))]",
    "deployConfigurationFunction": "PrepareSharepoint.ps1\\PrepareSharepoint"
  },
  "resources": [
    {
      "name": "[parameters('storageAccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[variables('location')]",
      "apiVersion": "2016-01-01",
      "sku": { "name": "[parameters('storageAccountType')]" },
      "kind": "Storage"
    },
    {
      "name": "[parameters('sharepointPublicIpName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "sharepointPublicIp"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('sharepointPublicIpDnsName')]"
        }
      }
    },
    {
      "name": "[parameters('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',parameters('sharepointPublicIpName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetResourceId')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('sharepointPublicIpName'))]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [ "[parameters('primaryAdIpAddress')]" ]
        }
      }
    },
    {
      "name": "[parameters('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts',parameters('storageAccount'))]",
        "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('windowsImagePublisher')]",
            "offer": "[parameters('windowsImageOffer')]",
            "sku": "[parameters('windowsImageSKU')]",
            "version": "[parameters('windowsImageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmContainerName'),'/', parameters('vmName'), '0','-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccount')),providers('Microsoft.Storage','storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmContainerName'),'/',parameters('vmName'),'0','-data-1.vhd')]"
              },
              "name": "[concat(parameters('vmName'), '0','data-1.vhd')]",
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[parameters('diskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "[concat(parameters('vmName'),'/BgInfo')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "BGInfo",
            "typeHandlerVersion": "2.1",
            "settings": {
              "properties": []
            }
          }
        },
        {
          "name": "[concat(parameters('vmName'),'/PrepareSharepoint')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.76",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "modulesUrl": "[variables('deployModulesURL')]",
              "configurationFunction": "[variables('deployConfigurationFunction')]",
              "Properties": {
                "DomainName": "[parameters('domainName')]",
                "primaryAdIpAddress": "[parameters('primaryAdIpAddress')]",
                "AdminCreds": {
                  "UserName": "[parameters('adminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                },
                "SharePointSetupUserAccountcreds": {
                  "UserName": "[parameters('sharePointSetupUserAccountUserName')]",
                  "Password": "PrivateSettingsRef:SharePointSetupUserAccountPassword"
                },
                "SharePointFarmAccountcreds": {
                  "UserName": "[parameters('sharePointFarmAccountUserName')]",
                  "Password": "PrivateSettingsRef:SharePointFarmAccountPassword"
                },
                "Passphrase": {
                  "UserName": "ignore",
                  "Password": "PrivateSettingsRef:AdminPassword"
                },
                "DatabaseName": "[parameters('DatabaseName')]",
                "DatabaseServer": "[concat(parameters('sqlVMName'),'.',parameters('domainName'))]",
                "InstallSourceDrive": "[parameters('sharepointInstallSourceDrive')]",
                "InstallSourceFolderName": "[parameters('sharepointInstallSourceFolder')]",
                "ProductKey": "[parameters('ProductKey')]",
                "SPDLLink": "[parameters('installationISOUri')]"
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('adminPassword')]",
                "SharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
                "SharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
                "SharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]"
              }
            }
          }
        }
      ]
    }
  ]
}
